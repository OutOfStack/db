// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/OutOfStack/db (interfaces: StorageLayer)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_storage.go -package=mocks . StorageLayer
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockStorageLayer is a mock of StorageLayer interface.
type MockStorageLayer struct {
	ctrl     *gomock.Controller
	recorder *MockStorageLayerMockRecorder
	isgomock struct{}
}

// MockStorageLayerMockRecorder is the mock recorder for MockStorageLayer.
type MockStorageLayerMockRecorder struct {
	mock *MockStorageLayer
}

// NewMockStorageLayer creates a new mock instance.
func NewMockStorageLayer(ctrl *gomock.Controller) *MockStorageLayer {
	mock := &MockStorageLayer{ctrl: ctrl}
	mock.recorder = &MockStorageLayerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorageLayer) EXPECT() *MockStorageLayerMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockStorageLayer) Execute(ctx context.Context, cmd string, args []string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", ctx, cmd, args)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Execute indicates an expected call of Execute.
func (mr *MockStorageLayerMockRecorder) Execute(ctx, cmd, args any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockStorageLayer)(nil).Execute), ctx, cmd, args)
}
