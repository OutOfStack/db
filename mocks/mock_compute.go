// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/OutOfStack/db (interfaces: ComputeLayer)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_compute.go -package=mocks . ComputeLayer
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockComputeLayer is a mock of ComputeLayer interface.
type MockComputeLayer struct {
	ctrl     *gomock.Controller
	recorder *MockComputeLayerMockRecorder
	isgomock struct{}
}

// MockComputeLayerMockRecorder is the mock recorder for MockComputeLayer.
type MockComputeLayerMockRecorder struct {
	mock *MockComputeLayer
}

// NewMockComputeLayer creates a new mock instance.
func NewMockComputeLayer(ctrl *gomock.Controller) *MockComputeLayer {
	mock := &MockComputeLayer{ctrl: ctrl}
	mock.recorder = &MockComputeLayerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockComputeLayer) EXPECT() *MockComputeLayerMockRecorder {
	return m.recorder
}

// HandleRequest mocks base method.
func (m *MockComputeLayer) HandleRequest(ctx context.Context, input string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleRequest", ctx, input)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HandleRequest indicates an expected call of HandleRequest.
func (mr *MockComputeLayerMockRecorder) HandleRequest(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleRequest", reflect.TypeOf((*MockComputeLayer)(nil).HandleRequest), ctx, input)
}
